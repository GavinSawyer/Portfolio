name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - id:   cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key:  node-modules-cache-${{ hashFiles('package-lock.json') }}
      - if:  steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npx nx run-many --target build --all
        env:
          APP_CHECK_TOKEN_CONSOLE: ${{ secrets.APP_CHECK_TOKEN_CONSOLE }}
          APP_CHECK_TOKEN_WEBSITE: ${{ secrets.APP_CHECK_TOKEN_WEBSITE }}
          NX_CLOUD_ACCESS_TOKEN:   ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken:              ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_A59E2 }}
          channelId:              live
          projectId:              portfolio-a59e2
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORTFOLIO_A59E2 }}
      - run: npx nx run functions:deploy
        env:
          NX_CLOUD_ACCESS_TOKEN:   ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
